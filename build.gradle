apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'eclipse-wtp'
apply plugin: 'maven'
apply plugin: 'jetty'

sourceCompatibility = 1.7
targetCompatibility = 1.7
compileJava.options.encoding = 'UTF-8'


buildDir = 'build'

   ext {
		springVersion = '3.2.8.RELEASE'
		slf4jVersion = '1.7.5'
		logbackVersion = '1.0.13'

		javaCompilerExecutable = System.env['JAVA_HOME'] ? System.env['JAVA_HOME'] + '/bin/javac' : 'javac'
    }


List loggers = [
    "org.slf4j:slf4j-api:${slf4jVersion}",
    "org.slf4j:jcl-over-slf4j:${slf4jVersion}",
    "org.slf4j:log4j-over-slf4j:${slf4jVersion}",
    "org.slf4j:jul-to-slf4j:${slf4jVersion}",
    "ch.qos.logback:logback-core:${logbackVersion}",
    "ch.qos.logback:logback-classic:${logbackVersion}"
    ]

def springframework = [
        "org.springframework:spring-core:${springVersion}",
        "org.springframework:spring-context:${springVersion}",
        "org.springframework:spring-web:${springVersion}",
        "org.springframework:spring-webmvc:${springVersion}",
        "org.springframework:spring-aop:${springVersion}",
        "org.springframework:spring-tx:${springVersion}",
        "org.springframework:spring-aspects:${springVersion}",
        "org.springframework:spring-jdbc:${springVersion}",
        "org.springframework:spring-orm:${springVersion}",
        "org.springframework:spring-test:${springVersion}"
]



repositories {
    jcenter()
    mavenCentral()
}


dependencies {
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
    compile loggers
    compile 'com.google.guava:guava:15.0'
    compile 'org.apache.ibatis:ibatis-sqlmap:2.3.4.726'
    compile 'joda-time:joda-time:2.3'
    compile 'hsqldb:hsqldb:1.8.0.10'
    compile 'com.h2database:h2:1.4.180'
    runtime 'jstl:jstl:1.2'
    compile 'taglibs:standard:1.1.2'
    compile 'javassist:javassist:3.12.1.GA'
    compile 'javax.validation:validation-api:1.1.0.Final'
	compile 'org.hibernate:hibernate-validator:5.1.0.Final'

	compile 'javax.persistence:persistence-api:1.0.2'
	compile 'opensymphony:sitemesh:2.4.2'
	compile 'com.jolbox:bonecp:0.8.0.RELEASE'
	compile 'org.mybatis:mybatis:3.2.2'
	compile 'org.mybatis:mybatis-spring:1.2.2'
	compile 'com.googlecode.flyway:flyway-core:2.3.1'
	
	
    /*rest*/
    compile 'org.springframework.hateoas:spring-hateoas:0.8.0.RELEASE'
   // compile 'org.pojomatic:pojomatic:2.3.1'
    compile 'com.fasterxml.jackson.core:jackson-core:2.2.3'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.2.3'

    compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.13'
    compile 'org.codehaus.jackson:jackson-core-asl:1.9.13'


   springframework.collect{
			compile(it){
				exclude(group:"cglib", module:"cglib")
				exclude(group:'commons-logging', module:'commons-logging')
			}
		}

   /*db*/
   compile 'org.mybatis:mybatis:3.2.3'
   compile 'org.mybatis:mybatis-spring:1.2.1'
   compile 'org.hsqldb:hsqldb:2.3.1'



  /*
  test
  */
    testCompile 'junit:junit:4.11'
    testCompile 'org.jmock:jmock:2.6.0'
    testCompile "junit:junit:4.11"
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'com.github.springtestdbunit:spring-test-dbunit:1.0.1'
    testCompile 'com.jayway.jsonpath:json-path:0.9.1'
    testCompile  ('org.springframework:spring-test:3.2.8.RELEASE')
     {
	exclude( module: 'commons-logging')
     }
}



task initProject << {
	createDir = {
		it.mkdirs();
	}

	sourceSets.main.resources.srcDirs = ["src/main/resources"]
	sourceSets*.java.srcDirs*.each createDir
	sourceSets*.resources.srcDirs*.each createDir
	createDir webAppDir
	createDir new File(webAppDir, '/WEB-INF/views');

	processResources {
		from(sourceSets.main.resources.srcDirs) {
		}
	}
}



  eclipse{
		classpath {
			downloadSources = true
			defaultOutputDir = file("${buildDir}/classes")
	 	}
		jdt{
			sourceCompatibility = 1.7
			targetCompatibility = 1.7
		}

		wtp{
			component{
				contextPath ='/'
			}
			facet{
				facet name :'jst.web',   version:'3.1'
				facet name : 'jst.java', version:'1.7'
			}
		}
    }

   // tasks.eclipse.dependsOn initProject
    tasks.eclipse.dependsOn cleanEclipse


